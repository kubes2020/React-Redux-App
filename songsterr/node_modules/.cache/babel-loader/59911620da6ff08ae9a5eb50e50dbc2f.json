{"ast":null,"code":"import { FETCH_SONG_START, FETCH_SONG_SUCCESS, FETCH_SONG_FAILURE } from \"../actions/songActions\";\nconst initialState = {\n  songs: [],\n  isLoading: false,\n  error: \"\"\n};\nexport const songReducer = (state = initialState, action) => {\n  console.log(\"action in songReducer\", action.payload.title);\n\n  switch (action.type) {\n    case FETCH_SONG_START:\n      return { ...state,\n        isLoading: true\n      };\n\n    case FETCH_SONG_SUCCESS:\n      return { ...state,\n        songs: action.payload,\n        isLoading: false\n      };\n\n    case FETCH_SONG_FAILURE:\n      return { ...state,\n        isLoading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/briankubes/lambda/lambda_unit3/React-Redux-App/songsterr/src/reducers/songReducer.js"],"names":["FETCH_SONG_START","FETCH_SONG_SUCCESS","FETCH_SONG_FAILURE","initialState","songs","isLoading","error","songReducer","state","action","console","log","payload","title","type"],"mappings":"AAAA,SACEA,gBADF,EAEEC,kBAFF,EAGEC,kBAHF,QAIO,wBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,MAAM,CAACG,OAAP,CAAeC,KAApD;;AACA,UAAQJ,MAAM,CAACK,IAAf;AACE,SAAKd,gBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,SAAS,EAAE;AAFN,OAAP;;AAIF,SAAKJ,kBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,KAAK,EAAEK,MAAM,CAACG,OAFT;AAGLP,QAAAA,SAAS,EAAE;AAHN,OAAP;;AAKF,SAAKH,kBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,SAAS,EAAE,KAFN;AAGLC,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAHT,OAAP;;AAKF;AACE,aAAOJ,KAAP;AAnBJ;AAqBD,CAvBM","sourcesContent":["import {\n  FETCH_SONG_START,\n  FETCH_SONG_SUCCESS,\n  FETCH_SONG_FAILURE,\n} from \"../actions/songActions\";\n\nconst initialState = {\n  songs: [],\n  isLoading: false,\n  error: \"\",\n};\n\nexport const songReducer = (state = initialState, action) => {\n  console.log(\"action in songReducer\", action.payload.title);\n  switch (action.type) {\n    case FETCH_SONG_START:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case FETCH_SONG_SUCCESS:\n      return {\n        ...state,\n        songs: action.payload,\n        isLoading: false,\n      };\n    case FETCH_SONG_FAILURE:\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}